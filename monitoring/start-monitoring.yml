version: "3"

networks:
  openoracle-monitoring:
    name: openoracle-monitoring
    driver: bridge

services:
  # METRICS RELATED
  grafana:
    image: grafana/grafana:9.4.1
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      # See https://grafana.com/docs/grafana/latest/setup-grafana/configure-grafana/#override-configuration-with-environment-variables
      # and https://grafana.com/docs/grafana/latest/setup-grafana/configure-docker/
      # They recommend using env vars instead of overwriting config.ini
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - 3000:3000
    networks:
      - openoracle-monitoring

  prometheus:
    image: prom/prometheus:v2.42.0
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
      - --web.enable-remote-write-receiver
    restart: unless-stopped
    ports:
      - 9090:9090
    networks:
      - openoracle-monitoring
    # so that we can access the host from within the container
    # needed to get the metrics from host.docker.internal:9184/metrics
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  prometheus_data: {}
  grafana_data: {}